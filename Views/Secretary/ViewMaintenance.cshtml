@model IEnumerable<WebApplication3.Models.Income>

@{
    ViewData["Title"] = "ViewMaintenance";
    Layout = "~/Views/Shared/secretary.cshtml";
}

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3>Maintenance Records</h3>
       @*  <a href="@Url.Action("GenerateMaintenance", "Secretary")" class="btn btn-primary">
            Generate Monthly Maintenance
        </a> *@
    </div>

    <!-- Error & Success Messages -->
    @if (!string.IsNullOrEmpty(TempData["Error"] as string))
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    @if (!string.IsNullOrEmpty(TempData["Success"] as string))
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }


    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4 pb-2">
                <h5 class="mb-0">Maintenance</h5>
                <br />                
                <a asp-action="Maintenance" class="btn btn-primary">Add Maintenance</a>
            </div>

            <div class="btn-group mb-3 d-flex">
                <a href="@Url.Action("ViewMaintenance", new {wing = "Wing A" })"
                   class="btn btn-outline-primary @(ViewBag.SelectedWing == "Wing A" ? "active fw-bold text-white bg-primary" : "")">
                     Wing A
                </a>
                <a href="@Url.Action("ViewMaintenance", new { wing = "Other Wings", status = ViewBag.SelectedStatus })"
                   class="btn btn-outline-secondary @(ViewBag.SelectedWing == "Other Wings" ? "active fw-bold text-white bg-secondary" : "")">
                     Rest of the Wings
                </a>
            </div>

            <!-- Status Filter Buttons -->
            <div class="d-flex justify-content-center">
<div class="d-flex flex-wrap gap-2">
    <a asp-action="ViewMaintenance" asp-route-status="Pending" 
       class="btn rounded-pill px-3 py-2 
       @(ViewBag.SelectedStatus == "Pending" ? "btn-warning text-dark fw-bold shadow-sm" : "btn-outline-warning")">
        Pending
    </a>
    
    <a asp-action="ViewMaintenance" asp-route-status="Paid" 
       class="btn rounded-pill px-3 py-2 
       @(ViewBag.SelectedStatus == "Paid" ? "btn-success text-white fw-bold shadow-sm" : "btn-outline-success")">
         Paid
    </a>
    
    <a asp-action="ViewMaintenance" asp-route-status="Overdue" 
       class="btn rounded-pill px-3 py-2 
       @(ViewBag.SelectedStatus == "Overdue" ? "btn-danger text-white fw-bold shadow-sm" : "btn-outline-danger")">
         Overdue
    </a>
    
    <a asp-action="ViewMaintenance" asp-route-status="" 
       class="btn rounded-pill px-3 py-2 
       @(string.IsNullOrEmpty(ViewBag.SelectedStatus) ? "btn-primary text-white fw-bold shadow-sm" : "btn-outline-primary")">
         Show All
    </a>
</div>
</div>

            @* <!-- Status Filter Buttons -->
            <div class="btn-group">
                <a asp-action="ViewMaintenance" asp-route-status="Pending" class="btn @(ViewBag.SelectedStatus == "Pending" ? "btn-primary text-white fw-bold shadow-sm" : "btn-outline-primary fw-bold")">Pending</a>
                <a asp-action="ViewMaintenance" asp-route-status="Paid" class="btn @(ViewBag.SelectedStatus == "Paid" ? "btn-primary text-white fw-bold shadow-sm" : "btn-outline-primary fw-bold")">Paid</a>
                <a asp-action="ViewMaintenance" asp-route-status="Overdue" class="btn @(ViewBag.SelectedStatus == "Overdue" ? "btn-primary text-white fw-bold shadow-sm" : "btn-outline-primary fw-bold")">Overdue</a>
                <a asp-action="ViewMaintenance" asp-route-status="" class="btn @(string.IsNullOrEmpty(ViewBag.SelectedStatus) ? "btn-primary text-white fw-bold shadow-sm" : "btn-outline-primary fw-bold")">Show All</a>
            </div> *@
            <div class="table-responsive pb-4">
                <table id="all-student" class="table table-striped table-bordered border text-nowrap align-middle">
                    <thead class="table-dark">
            <tr>

                            <th>
                                @Html.DisplayNameFor(model => model.First().Wingno)-@Html.DisplayNameFor(model => model.First().Flatno)
                            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
                           
           
            <th>
                 @Html.DisplayNameFor(model => model.Date)
             </th>
            <th>
                @Html.DisplayNameFor(model => model.Details)
            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
           @*   <th>
                 @Html.DisplayNameFor(model => model.U)
             </th> *@
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Wingno)-@Html.DisplayFor(modelItem => item.Flatno)
                                </td>
            <td>
                ₹  @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
                               
           @* <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>  *@
                                
                                <td>
                                    @item.Date.ToString("dd-MM-yyyy")
                                </td>

            <td>
                @Html.DisplayFor(modelItem => item.Details)
            </td>
                                <td>
                                    @if (item.Status == "Pending")
                                    {
                                        <span class="badge bg-primary text-dark">Pending</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Paid</span>
                                    }
                                </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.U.Contactno)
            </td> 
            *@                                
                <td>
                                    <a asp-action="MaintenanceEdit" asp-route-id="@item.Id" class="text-primary">
                                        <i class="ti ti-pencil fs-7"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="text-success ms-2">
                                        <i class="ti ti-eye fs-7"></i>
                                    </a>
                                    <a asp-action="DeleteMaintenance" asp-route-id="@item.Id" class="text-danger ms-2" onclick="return confirm('Are you sure you want to delete this payment?')">
                                        <i class="ti ti-trash fs-7"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<style>
    /* Enhance table design */
    table {
        border-collapse: collapse;
        width: 100%;
    }

    .table thead th {
        text-transform: uppercase;
        text-align: center;
    }

    .table td,
    .table th {
        text-align: left;
        vertical-align: middle;
    }

    .btn {
        text-transform: uppercase;
        font-size: 0.875rem;
    }

    .container h1 {
        color: #333;
    }
</style>
